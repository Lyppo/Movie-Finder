let ACCOUNT_ID = ""; // ID du compte
let ACCESS_TOKEN = ""; // Token d'acc√®s
let SESSION_ID = ""; // ID de session

// üîê Fonction d'authentification asynchrone
async function requestAuth(url, content, type) {
    logMessage('group', `[AUTH] ${type} ‚Üí ${url}`); // D√©marrer un groupe de log pour l'authentification

    logMessage('log', 'üì§ Envoi des donn√©es :', content); // Afficher les donn√©es envoy√©es

    try {
        const response = await fetch('https://tmdb-request.antodu72210.workers.dev/', {
            method: type,
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ url: url, content: content })
        });

        const data = await response.json();
        
        logMessage('log', 'üì© R√©ponse re√ßue :', data); // Afficher la r√©ponse API

        if (!response.ok) {
            throw new Error(`üö´ Erreur HTTP : ${response.status}`);
        }

        console.groupEnd();
        return data;
    } catch (error) {
        logMessage('error', '‚ùå Erreur :', error.message); // Afficher l'erreur
        console.groupEnd();
        return null;
    }
}

// üîë Cr√©ation d'un token de requ√™te
async function createRequestToken() {
    let redirect_to = window.location.href.replace(/(\.html|\/index)$/, "") + "/popup.html";

    logMessage('group', "Cr√©ation du token de requ√™te..."); // Indiquer le d√©but de la cr√©ation du token
    const data = await requestAuth('https://api.themoviedb.org/4/auth/request_token', { redirect_to }, 'POST');

    if (data?.request_token) {
        logMessage('success', 'üîë Token g√©n√©r√© :', { request_token: data.request_token });
    } else {
        logMessage('warn', "‚ö†Ô∏è √âchec de la g√©n√©ration du token."); // Avertir en cas d'√©chec
    }

    console.groupEnd();
    return data?.request_token;
}

// üîì Cr√©ation d'un token d'acc√®s
async function createAccessToken(tmpToken) {
    logMessage('group', "[AUTH] Cr√©ation du token d'acc√®s..."); // Indiquer le d√©but de la cr√©ation du token d'acc√®s
    const data = await requestAuth('https://api.themoviedb.org/4/auth/access_token', { request_token: tmpToken }, 'POST');

    if (data?.account_id && data?.access_token) {
        ACCOUNT_ID = data.account_id;
        ACCESS_TOKEN = data.access_token;
        setCookie("ACCOUNT_ID", ACCOUNT_ID);
        setCookie("ACCESS_TOKEN", ACCESS_TOKEN);

        logMessage('success', 'üÜî ID du compte et token d\'acc√®s cr√©√©s :', { ACCOUNT_ID, ACCESS_TOKEN });
    } else {
        logMessage('warn', "‚ö†Ô∏è √âchec de la cr√©ation du token d'acc√®s."); // Avertir en cas d'√©chec
    }

    console.groupEnd();
}

// üèÅ Cr√©ation d'une session
async function createSession() {
    logMessage('group', "Cr√©ation de la session..."); // Indiquer le d√©but de la cr√©ation de la session
    const data = await requestAuth('https://api.themoviedb.org/3/authentication/session/convert/4', 
        { access_token: ACCESS_TOKEN }, 'POST');

    if (data?.session_id) {
        SESSION_ID = data.session_id;
        setCookie("SESSION_ID", SESSION_ID);

        logMessage('success', '‚úÖ Session cr√©√©e :', { SESSION_ID });
    } else {
        logMessage('warn', "‚ö†Ô∏è √âchec de la cr√©ation de la session."); // Avertir en cas d'√©chec
    }

    console.groupEnd();
}

// üö™ D√©connexion
async function logoutRequest() {
    logMessage('group', "Suppression du token d'acc√®s..."); // Indiquer le d√©but de la suppression du token d'acc√®s
    const data = await requestAuth('https://api.themoviedb.org/4/auth/access_token', { access_token: ACCESS_TOKEN }, 'DELETE');

    if (data?.success) {
        logMessage('success', '‚úÖ Token supprim√© avec succ√®s.');
    } else {
        logMessage('warn', "‚ö†Ô∏è √âchec de la suppression du token."); // Avertir en cas d'√©chec
    }

    console.groupEnd();
    return data;
}

// Appel de la fonction pour afficher la documentation
afficherDocumentation(
    "auth.js",
    [
        { emoji: "üîê", description: "Fonction d'authentification", couleur: "color: #1E90FF; font-weight: bold;" },
        { emoji: "üîë", description: "Cr√©ation d'un token de requ√™te", couleur: "color: #FFD700; font-weight: bold;" },
        { emoji: "üîì", description: "Cr√©ation d'un token d'acc√®s", couleur: "color: #00BFFF; font-weight: bold;" },
        { emoji: "üèÅ", description: "Cr√©ation d'une session", couleur: "color: #8A2BE2; font-weight: bold;" },
        { emoji: "üö™", description: "D√©connexion", couleur: "color: #DC143C; font-weight: bold;" }
    ],
    [
        {
            nom: "requestAuth(url, content, type)",
            couleur: "color: #FFD700; font-weight: bold;",
            descriptions: [
                "Envoie une requ√™te d'authentification √† l'API TMDB.",
                "G√®re les erreurs et affiche les r√©ponses dans la console."
            ]
        },
        {
            nom: "createRequestToken()",
            couleur: "color: #FFD700; font-weight: bold;",
            descriptions: [
                "Cr√©e un token de requ√™te pour l'authentification de l'utilisateur.",
                "Redirige l'utilisateur apr√®s la g√©n√©ration du token."
            ]
        },
        {
            nom: "createAccessToken(tmpToken)",
            couleur: "color: #FFD700; font-weight: bold;",
            descriptions: [
                "√âchange un token de requ√™te temporaire contre un token d'acc√®s permanent.",
                "Stocke l'ID du compte et le token d'acc√®s dans des cookies."
            ]
        },
        {
            nom: "createSession()",
            couleur: "color: #FFD700; font-weight: bold;",
            descriptions: [
                "Cr√©e une session pour l'utilisateur avec le token d'acc√®s.",
                "Stocke l'ID de session dans un cookie."
            ]
        },
        {
            nom: "logoutRequest()",
            couleur: "color: #FFD700; font-weight: bold;",
            descriptions: [
                "Supprime le token d'acc√®s de l'utilisateur pour le d√©connexion.",
                "Affiche le succ√®s ou l'√©chec de la d√©connexion dans la console."
            ]
        }
    ]
);
